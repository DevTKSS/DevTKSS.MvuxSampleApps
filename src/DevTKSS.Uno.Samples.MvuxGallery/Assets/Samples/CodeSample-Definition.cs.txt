namespace DevTKSS.Uno.Samples.MvuxGallery.Models.CodeSamples;

public record CodeSampleOptionsConfiguration
{
    public Dictionary<string, CodeSampleOption> Samples { get; init; } = new();
}

public record CodeSampleOption
{
    public string Description { get; init; } = string.Empty;
    public string FilePath { get; init; } = string.Empty;
    public List<(int Start, int End)> LineRanges { get; init; } = [];
}

namespace DevTKSS.Uno.Samples.MvuxGallery.Models.CodeSamples;

[JsonSerializable(typeof(CodeSampleOptionsConfiguration))]
public partial class CodeSampleOptionsConfigurationContext : JsonSerializerContext
{
}

[JsonSerializable(typeof(CodeSampleOption))]
public partial class CodeSampleOptionContext : JsonSerializerContext
{
}

{
  "ListboardSampleConfiguration": {
    "FeedView + ListView XAML": {
      "Description": "",
      "FilePath": "Assets/Samples/FeedView-ListView-Sample.xaml.txt",
      "LineRanges": []
    },
    "Use Service to load Data from Storage": {
      "Description": "This sample shows how to use a service to load data from storage. The service is registered in the DI container and can be injected into the view model.",
      "FilePath": "Assets/Samples/Listboard-SampleViaService.cs.txt",
      "LineRanges": []
    },
    "DI Storage handling Service": {
      "FilePath": "Assets/Samples/Listboard-StorageService.cs.txt",
      "LineRanges": []
    },
    "Settings DataModel Definition": {
      "Description": "While DataModels used to load Data via IOptions can not be fully immutable, using init instead of set allows us to set the properties only once, when the object is created.",
      "FilePath": "Assets/Samples/CodeSample-Definition.cs.txt",
      "LineRanges": [ 1, 13 ]
    },
    "Settings DataModel JsonContext": {
      "Description": "Define the JsonSerializerContext to load the code sample options configuration from the appsettings.json file.",
      "FilePath": "Assets/Samples/CodeSample-Definition.cs.txt",
      "LineRanges": [ 15, 25 ]
    },
    "Settings Data in appsettings": {
      "Description": "Settings to find storage Data, can easily be stored in appsettings.json, since we can update them via IWritableOptions.",
      "FilePath": "Assets/Samples/CodeSample-Definition.cs.txt",
      "LineRanges": []
    },
    "XAML DataTemplate": {
      "Description": "The DataTemplate is used to define how the data is displayed in the ListView. The DataTemplate is showing a Card Control from Uno.Toolkit.UI and is definied in a ResourcesDictionary loaded via MergedResourcesDictionaries.",
      "FilePath": "Assets/Samples/Card-GalleryImage.DataTemplate.xaml.txt",
      "LineRanges": []
    },
  },
